import { defineComponent as s, inject as p, computed as m, ref as g, onMounted as v, nextTick as y, onUnmounted as f, watch as i, openBlock as h, createElementBlock as F } from "vue";
import { ChordDiagram as _ } from "@unovis/ts";
import { useForwardProps as b, arePropsEqual as k } from "../../utils/props.js";
import { componentAccessorKey as x } from "../../utils/context.js";
const C = { "data-vis-component": "" }, D = /* @__PURE__ */ s({
  __name: "index",
  props: {
    angleRange: {},
    cornerRadius: { type: [Function, Number, null] },
    highlightedNodeId: {},
    highlightedLinkIds: {},
    linkColor: { type: [Function, String, Array, null] },
    linkValue: { type: [Function, Number, null] },
    nodeLevels: {},
    nodeWidth: {},
    nodeColor: { type: [Function, String, Array, null] },
    nodeLabel: { type: [Function, String, null] },
    nodeLabelColor: { type: [Function, String, null] },
    nodeLabelAlignment: { type: [Function, null] },
    padAngle: {},
    radiusScaleExponent: {},
    duration: {},
    events: {},
    attributes: {},
    data: {}
  },
  setup(c, { expose: d }) {
    const l = c, t = p(x), o = m(() => t.data.value ?? l.data), a = b(l), n = g();
    return v(() => {
      y(() => {
        var e;
        n.value = new _(a.value), (e = n.value) == null || e.setData(o.value), t.update(n.value);
      });
    }), f(() => {
      var e;
      (e = n.value) == null || e.destroy(), t.destroy();
    }), i(a, (e, r) => {
      var u;
      k(e, r) || (u = n.value) == null || u.setConfig(a.value);
    }), i(o, () => {
      var e;
      (e = n.value) == null || e.setData(o.value);
    }), d({
      component: n
    }), (e, r) => (h(), F("div", C));
  }
});
export {
  D as default
};
//# sourceMappingURL=index.js.map
