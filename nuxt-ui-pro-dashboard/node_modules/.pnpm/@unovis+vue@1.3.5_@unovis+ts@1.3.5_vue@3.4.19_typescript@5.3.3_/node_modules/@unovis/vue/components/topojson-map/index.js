import { defineComponent as s, inject as m, computed as d, ref as y, onMounted as F, nextTick as v, onUnmounted as g, watch as l, openBlock as S, createElementBlock as b } from "vue";
import { TopoJSONMap as f } from "@unovis/ts";
import { useForwardProps as h, arePropsEqual as k } from "../../utils/props.js";
import { componentAccessorKey as C } from "../../utils/context.js";
const _ = { "data-vis-component": "" }, M = /* @__PURE__ */ s({
  __name: "index",
  props: {
    projection: { type: [Function, Object] },
    topojson: {},
    mapFeatureName: {},
    mapFitToPoints: { type: Boolean },
    zoomFactor: {},
    disableZoom: { type: Boolean },
    zoomExtent: {},
    zoomDuration: {},
    linkWidth: { type: [Function, Number, null] },
    linkColor: { type: [Function, String, Array, null] },
    linkCursor: { type: [Function, String, null] },
    linkId: { type: [Function, String, null] },
    linkSource: { type: Function },
    linkTarget: { type: Function },
    areaId: { type: [Function, String, null] },
    areaColor: { type: [Function, String, Array, null] },
    areaCursor: { type: [Function, String, null] },
    pointColor: { type: [Function, String, Array, null] },
    pointRadius: { type: [Function, Number, null] },
    pointStrokeWidth: { type: [Function, Number, null] },
    pointCursor: { type: [Function, String, null] },
    longitude: { type: [Function, Number, null] },
    latitude: { type: [Function, Number, null] },
    pointLabel: { type: [Function, String, null] },
    pointLabelPosition: {},
    pointLabelTextBrightnessRatio: {},
    pointId: { type: Function },
    heatmapMode: { type: Boolean },
    heatmapModeBlurStdDeviation: {},
    heatmapModeZoomLevelThreshold: {},
    duration: {},
    events: {},
    attributes: {},
    data: {}
  },
  setup(p, { expose: c }) {
    const a = p, o = m(C), e = d(() => o.data.value ?? a.data), i = h(a), n = y();
    return F(() => {
      v(() => {
        var t;
        n.value = new f(i.value), (t = n.value) == null || t.setData(e.value), o.update(n.value);
      });
    }), g(() => {
      var t;
      (t = n.value) == null || t.destroy(), o.destroy();
    }), l(i, (t, r) => {
      var u;
      k(t, r) || (u = n.value) == null || u.setConfig(i.value);
    }), l(e, () => {
      var t;
      (t = n.value) == null || t.setData(e.value);
    }), c({
      component: n
    }), (t, r) => (S(), b("div", _));
  }
});
export {
  M as default
};
//# sourceMappingURL=index.js.map
