import { defineComponent as p, inject as l, ref as m, onMounted as u, nextTick as d, onUnmounted as f, watch as v, openBlock as _, createElementBlock as h } from "vue";
import { Tooltip as x } from "@unovis/ts";
import { useForwardProps as g, arePropsEqual as P } from "../../utils/props.js";
import { tooltipAccessorKey as k } from "../../utils/context.js";
const w = { "data-vis-tooltip": "" }, E = /* @__PURE__ */ p({
  __name: "index",
  props: {
    components: {},
    container: {},
    horizontalPlacement: {},
    horizontalShift: {},
    verticalPlacement: {},
    verticalShift: {},
    triggers: {},
    attributes: {},
    data: {}
  },
  setup(c, { expose: i }) {
    const s = c, n = l(k), t = g(s), o = m();
    return u(() => {
      d(() => {
        o.value = new x(t.value), n.update(o.value);
      });
    }), f(() => {
      var e;
      (e = o.value) == null || e.destroy(), n.destroy();
    }), v(t, (e, r) => {
      var a;
      P(e, r) || (a = o.value) == null || a.setConfig(t.value);
    }), i({
      component: o
    }), (e, r) => (_(), h("div", w));
  }
});
export {
  E as default
};
//# sourceMappingURL=index.js.map
