import { defineComponent as d, inject as l, computed as m, ref as v, onMounted as f, nextTick as _, onUnmounted as h, watch as u, openBlock as x, createElementBlock as k } from "vue";
import { Crosshair as w } from "@unovis/ts";
import { useForwardProps as y, arePropsEqual as C } from "../../utils/props.js";
import { crosshairAccessorKey as g } from "../../utils/context.js";
const B = { "data-vis-crosshair": "" }, q = /* @__PURE__ */ d({
  __name: "index",
  props: {
    data: {}
  },
  setup(i, { expose: p }) {
    const r = i, t = l(g), a = m(() => t.data.value ?? r.data), s = y(r), o = v();
    return f(() => {
      _(() => {
        var e;
        o.value = new w(s.value), (e = o.value) == null || e.setData(a.value), t.update(o.value);
      });
    }), h(() => {
      var e;
      (e = o.value) == null || e.destroy(), t.destroy();
    }), u(s, (e, n) => {
      var c;
      C(e, n) || (c = o.value) == null || c.setConfig(s.value);
    }), u(a, () => {
      var e;
      (e = o.value) == null || e.setData(a.value);
    }), p({
      component: o
    }), (e, n) => (x(), k("div", B));
  }
});
export {
  q as default
};
//# sourceMappingURL=index.js.map
