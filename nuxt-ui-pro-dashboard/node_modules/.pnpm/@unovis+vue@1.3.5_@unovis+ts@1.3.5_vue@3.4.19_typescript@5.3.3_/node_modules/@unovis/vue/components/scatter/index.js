import { defineComponent as s, inject as y, computed as m, ref as d, onMounted as F, nextTick as v, onUnmounted as b, watch as c, openBlock as f, createElementBlock as g } from "vue";
import { Scatter as S } from "@unovis/ts";
import { useForwardProps as x, arePropsEqual as _ } from "../../utils/props.js";
import { componentAccessorKey as h } from "../../utils/context.js";
const k = { "data-vis-component": "" }, N = /* @__PURE__ */ s({
  __name: "index",
  props: {
    color: { type: [Function, String, Array, null] },
    size: { type: [Function, Number, null] },
    sizeScale: { type: [Object, Function] },
    sizeRange: {},
    shape: { type: [Function, String] },
    label: { type: [Function, String, null] },
    labelColor: { type: [Function, String, Array, null] },
    labelHideOverlapping: { type: Boolean },
    cursor: { type: [Function, String, null] },
    labelTextBrightnessRatio: {},
    labelPosition: { type: [Function, null] },
    strokeColor: { type: [Function, String, Array, null] },
    strokeWidth: { type: [Function, Number, null] },
    x: { type: [Function, Number, null] },
    y: { type: [Function, Number, null, Array] },
    id: { type: Function },
    xScale: { type: [Object, Function] },
    yScale: { type: [Object, Function] },
    excludeFromDomainCalculation: { type: Boolean },
    duration: {},
    events: {},
    attributes: {},
    data: {}
  },
  setup(i, { expose: p }) {
    const l = i, n = y(h), o = m(() => n.data.value ?? l.data), a = x(l), t = d();
    return F(() => {
      v(() => {
        var e;
        t.value = new S(a.value), (e = t.value) == null || e.setData(o.value), n.update(t.value);
      });
    }), b(() => {
      var e;
      (e = t.value) == null || e.destroy(), n.destroy();
    }), c(a, (e, r) => {
      var u;
      _(e, r) || (u = t.value) == null || u.setConfig(a.value);
    }), c(o, () => {
      var e;
      (e = t.value) == null || e.setData(o.value);
    }), p({
      component: t
    }), (e, r) => (f(), g("div", k));
  }
});
export {
  N as default
};
//# sourceMappingURL=index.js.map
