import { defineComponent as p, inject as y, computed as m, ref as d, onMounted as F, nextTick as g, onUnmounted as b, watch as c, openBlock as v, createElementBlock as S } from "vue";
import { XYLabels as f } from "@unovis/ts";
import { useForwardProps as x, arePropsEqual as _ } from "../../utils/props.js";
import { componentAccessorKey as C } from "../../utils/context.js";
const B = { "data-vis-component": "" }, P = /* @__PURE__ */ p({
  __name: "index",
  props: {
    color: { type: [Function, String, Array, null] },
    y: { type: [Function, Number, null] },
    xPositioning: { type: [Function, null] },
    yPositioning: { type: [Function, null] },
    labelFontSize: { type: [Function, Number, null] },
    label: { type: [Function, String, null] },
    backgroundColor: { type: [Function, String, Array, null] },
    cursor: { type: [Function, String, null] },
    labelTextBrightnessRatio: {},
    clustering: { type: Boolean },
    clusterLabel: { type: [Function, String, null] },
    clusterFontSize: { type: [Function, Number, null] },
    clusterBackgroundColor: { type: [Function, String, Array, null] },
    clusterCursor: { type: [Function, String, null] },
    clusterLabelColor: { type: [Function, String, Array, null] },
    x: { type: [Function, Number, null] },
    id: { type: Function },
    xScale: { type: [Object, Function] },
    yScale: { type: [Object, Function] },
    excludeFromDomainCalculation: { type: Boolean },
    duration: {},
    events: {},
    attributes: {},
    data: {}
  },
  setup(i, { expose: s }) {
    const u = i, e = y(C), o = m(() => e.data.value ?? u.data), l = x(u), n = d();
    return F(() => {
      g(() => {
        var t;
        n.value = new f(l.value), (t = n.value) == null || t.setData(o.value), e.update(n.value);
      });
    }), b(() => {
      var t;
      (t = n.value) == null || t.destroy(), e.destroy();
    }), c(l, (t, r) => {
      var a;
      _(t, r) || (a = n.value) == null || a.setConfig(l.value);
    }), c(o, () => {
      var t;
      (t = n.value) == null || t.setData(o.value);
    }), s({
      component: n
    }), (t, r) => (v(), S("div", B));
  }
});
export {
  P as default
};
//# sourceMappingURL=index.js.map
