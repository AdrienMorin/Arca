import { defineComponent as d, inject as i, computed as l, ref as v, onMounted as f, nextTick as _, onUnmounted as x, watch as u, openBlock as h, createElementBlock as k } from "vue";
import { Timeline as w } from "@unovis/ts";
import { useForwardProps as y, arePropsEqual as g } from "../../utils/props.js";
import { componentAccessorKey as B } from "../../utils/context.js";
const C = { "data-vis-component": "" }, j = /* @__PURE__ */ d({
  __name: "index",
  props: {
    data: {}
  },
  setup(p, { expose: m }) {
    const s = p, t = i(B), a = l(() => t.data.value ?? s.data), n = y(s), o = v();
    return f(() => {
      _(() => {
        var e;
        o.value = new w(n.value), (e = o.value) == null || e.setData(a.value), t.update(o.value);
      });
    }), x(() => {
      var e;
      (e = o.value) == null || e.destroy(), t.destroy();
    }), u(n, (e, c) => {
      var r;
      g(e, c) || (r = o.value) == null || r.setConfig(n.value);
    }), u(a, () => {
      var e;
      (e = o.value) == null || e.setData(a.value);
    }), m({
      component: o
    }), (e, c) => (h(), k("div", C));
  }
});
export {
  j as default
};
//# sourceMappingURL=index.js.map
